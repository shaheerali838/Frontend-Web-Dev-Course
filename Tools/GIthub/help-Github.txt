Session 17: Git & GitHub Basics

ðŸ”¸ 1. Recap of Session 16
â€¢ Reviewed pseudo-classes like hover, focus, active, and nth-child.
â€¢ Learned pseudo-elements ::before and ::after for decorative content.
â€¢ Practiced interactive button and card hover effects.
â€¢ Explored best practices for styling states in UI components.

ðŸ”¸ 2. Introduction to Git & GitHub
â€¢ Git is a version control system that tracks changes in your projects.
â€¢ GitHub is an online platform to host Git repositories, collaborate, and share code.
â€¢ Git helps manage project history, while GitHub acts as the online storage and collaboration hub.

ðŸ‘‰ Real-Life Example: Writing a school project. Git saves different drafts (versions), GitHub is like Google Drive where you upload and share with friends or teachers.

ðŸ”¸ 3. Creating a GitHub Account
â€¢ Go to github.com â†’ Sign Up â†’ Enter username, email, and password.
â€¢ Verify email to activate your account.
â€¢ GitHub account is required to host repositories online.

ðŸ‘‰ Example: Just like you need a social media account to share photos, you need a GitHub account to share projects.

ðŸ”¸ 4. Installing Git on Your Computer
â€¢ Windows: Download from git-scm.com and install.
â€¢ macOS: Install using Homebrew (brew install git).
â€¢ Linux: Use terminal (sudo apt install git).
â€¢ Verify installation: git --version.

ðŸ‘‰ Example: Installing Git is like installing Microsoft Word before you can start writing documents.

ðŸ”¸ 5. Setting Up Git (First-Time Config)
â€¢ Run:
git config --global user.name "Your Name"
git config --global user.email "your-email@example.com"
â€¢ Check with: git config --list.

ðŸ‘‰ Example: Like writing your name and email on a school project so everyone knows itâ€™s yours.

ðŸ”¸ 6. Linking Git with GitHub (SSH Method)
â€¢ Generate SSH key: ssh-keygen -t rsa -b 4096 -C "your-email@example.com".
â€¢ Copy key: cat ~/.ssh/id_rsa.pub.
â€¢ Add to GitHub â†’ Settings â†’ SSH Keys â†’ New Key.
â€¢ Test: ssh -T git@github.com.

ðŸ‘‰ Example: SSH key is like having a house key â€” you donâ€™t need to enter a password every time you visit.

ðŸ”¸ 7. Creating a Repository on GitHub
â€¢ Click New Repository â†’ Give it a name (e.g., my-first-project).
â€¢ Choose Public or Private â†’ Create.

ðŸ‘‰ Example: A repository is like a folder in Google Drive for storing and sharing files.

ðŸ”¸ 8. Connecting Local Git Project to GitHub Repo
â€¢ In your project folder:
git init
â€¢ Link remote repo:
git remote add origin git@github.com:username/my-first-project.git

ðŸ‘‰ Example: Like linking your PC folder with Google Drive for syncing.

ðŸ”¸ 9. First Commit and Push
â€¢ Stage files: git add .
â€¢ Commit: git commit -m "First commit"
â€¢ Push:
git branch -M main
git push -u origin main

ðŸ‘‰ Example: Saving your draft locally (commit) and uploading it to Google Drive (push).

ðŸ”¸ 10. Practical Example
Project: Portfolio Website
â€¢ Create folder portfolio.
â€¢ Add index.html.
â€¢ Commit changes.
â€¢ Push to GitHub repo portfolio-site.

Now the project is online and sharable with others.

ðŸ”¸ 11. Tips & Best Practices
â€¢ Commit often with meaningful messages.
â€¢ Use .gitignore for unnecessary files.
â€¢ Always pull (git pull origin main) before pushing when working in teams.

ðŸ”¸ 12. Practice Activity
Task:
â€¢ Create a repo my-practice-repo.
â€¢ Add file notes.txt with some text.
â€¢ Commit and push to GitHub.

Bonus:
â€¢ Edit notes.txt directly on GitHub and pull changes locally.

ðŸ”¸ 13. Wrap-up + Q&A
â€¢ Learned what Git and GitHub are.
â€¢ Created GitHub account and installed Git.
â€¢ Configured Git with username and email.
â€¢ Linked Git and GitHub using SSH.
â€¢ Practiced committing and pushing a project.

ðŸ”¸ Next Session Preview (Session 18)
â€¢ Introduction to Bootstrap Framework.
â€¢ Installing and setting up Bootstrap.
â€¢ Understanding responsive grid system.
â€¢ Using Bootstrap components like navbar, cards, and buttons.