🔸 1. Recap of Session 10
• Learned the different CSS color systems: Hex, RGB, RGBA, HSL, HSLA
• Understood when to use each format for flexibility and design control
• Applied transparency using RGBA/HSLA and the opacity property
• Created color palettes and multiple shades using HSL adjustments
• Built a color showcase page demonstrating all formats and effects

🔸 2. CSS Transitions & Animations

Concepts to Cover:
• Difference between transitions (state change animations) and animations (continuous or multi-step motion)
• CSS transition properties – property, duration, timing-function, delay
• Common timing functions: ease, linear, ease-in, ease-out, ease-in-out, cubic-bezier()
• CSS animations – @keyframes syntax for defining animation steps
• Animation properties – animation-name, animation-duration, animation-iteration-count, animation-direction, animation-delay, animation-fill-mode, animation-play-state

Visual Explanation:
• Transition example – smooth background color change on hover
• Animation example – moving an element across the screen using keyframes
• How keyframes define “from” and “to” or percentage-based steps

🔸 3. Practical Applications of Transitions & Animations

Key Points:
• Use transitions for hover effects, dropdowns, button states
• Use animations for repeated movement, loaders, banners
• Keep animations subtle to avoid distracting users
• Optimize performance – prefer transforms and opacity for smooth effects

Practice Idea:
• Create a button with hover effects:

Background color change with transition

Scale up slightly on hover using transform and transition

🔸 4. Tips & Common Mistakes

• Avoid animating layout properties like width/height too often – they can cause reflows
• Use animation-fill-mode: forwards to keep the final state after animation ends
• Combine transitions and transforms for smoother effects
• Keep animation duration and repetition user-friendly

🔸 5. Practice Activity

Task: Build a “CSS Animation Showcase” page
• Section 1: Buttons with hover transitions (color, scale, shadow)
• Section 2: A loader using keyframes
• Section 3: An image that slides in from the left when the page loads
• Create a loader animation using keyframes to rotate a shape

Bonus Task:
• Create a looping background gradient animation using keyframes

🔸 6. Wrap-up + Q&A

Summary:
• Learned the difference between CSS transitions and animations
• Practiced transition properties and timing functions
• Created animations using @keyframes and animation properties
• Discussed performance tips and common pitfalls

🔸 Next Session Preview (Session 12):
• CSS Transforms – translate, scale, rotate, skew
• Using transforms in combination with transitions and animations for engaging effects
• Practical UI enhancements with transform properties